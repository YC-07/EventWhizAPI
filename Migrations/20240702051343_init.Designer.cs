// <auto-generated />
using System;
using EventWhiz.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventWhiz.Migrations
{
    [DbContext(typeof(EventWhizDBContext))]
    [Migration("20240702051343_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventWhiz.Models.Domain.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("LocationId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("EventWhiz.Models.Domain.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Small"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Large"
                        });
                });

            modelBuilder.Entity("EventWhiz.Models.Domain.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationImgURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("87a8ab1a-0cd7-484b-9413-becfd31cef03"),
                            Code = "LOC001",
                            LocationImgURL = "https://www.google.com",
                            Name = "Location 1"
                        },
                        new
                        {
                            Id = new Guid("9a87817d-c43d-4260-aa25-0335cf9bbaf8"),
                            Code = "LOC002",
                            LocationImgURL = "https://www.google.com",
                            Name = "Location 2"
                        },
                        new
                        {
                            Id = new Guid("a266a065-0c4f-458f-adcc-e84ce15d56a6"),
                            Code = "LOC003",
                            LocationImgURL = "https://www.google.com",
                            Name = "Location 3"
                        },
                        new
                        {
                            Id = new Guid("01f6a0e3-36f9-4da7-bba4-006347260d8b"),
                            Code = "LOC004",
                            LocationImgURL = "https://www.google.com",
                            Name = "Location 4"
                        },
                        new
                        {
                            Id = new Guid("6b00aa4a-32f6-4bdc-9c88-f6208d39e7d4"),
                            Code = "LOC005",
                            LocationImgURL = "https://www.google.com",
                            Name = "Location 5"
                        });
                });

            modelBuilder.Entity("EventWhiz.Models.Domain.Event", b =>
                {
                    b.HasOne("EventWhiz.Models.Domain.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventWhiz.Models.Domain.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventType");

                    b.Navigation("Location");
                });
#pragma warning restore 612, 618
        }
    }
}
